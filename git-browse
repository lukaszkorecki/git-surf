#!/usr/bin/env bash

# utility / setup functions
logerr() { echo "$@" 1>&2; }

# detect open-url command
(  uname | grep Darwin >/dev/null ) && open_command='open'
(  uname | grep Linux >/dev/null ) && open_command=xdg-open

if [[ -z "$open_command" ]] ; then
  logerr 'No command to open the url in the browser!'
fi

# parse options
# -h, -c -r

REMOTE=origin
SHOWHELP=n
SHOWCOMMIT=n

while getopts "hc:r:" OPTION; do
  case "$OPTION" in
    h)
      SHOWHELP=y
      ;;
    c)
      SHOWCOMMIT=n
      COMMIT="$OPTARG"
      ;;

    r)
      REMOTE="$OPTARG"
      ;;
  esac

done

echo "WOO $SHOWHELP $COMMIT $REMOTE $*"

# TODO use getops
if [[ $SHOWHELP == 'y' ]] ; then
  echo 'git browse  to open current branch on GitHub'
  echo 'git browse <file>
  - to open file on current branch on GitHub'
  echo 'git browse <file> <line start><line end>
  - to open file on current branch on GitHub and to point to a
    given line or range of lines'
  echo 'git browse -c <commit sha> - open given commit on github'
  echo 'Example:'
  echo '    git browse bins/git-browse 5 10
                - will open https://github.com/lukaszkorecki/dotfiles/tree/master/bins/git-browse#L5-L10'
  echo '    git browse -c $(git log --pretty=oneline | grep fix | cut -f 1 -d ' ' | head -1)
                - opens latest commit with 'fix' in commit message'
  exit 0
fi


# get current branch for given repo
currentBranch() {
  git symbolic-ref HEAD | rev | cut -d/ -f 1 | rev
}

# parse out a path to a file and/or repo
# first arg is the path to the file, falls back to repo root
getRepoRoot() {
  # git rev-parse --show-toplevel
  if [[ -z "$1" || "$1" == "." ]] ; then
    echo ""
  else
    git ls-tree $(currentBranch) --full-name $1 | awk '{ print $4 }'
  fi
}


# FIXME needs to handle more
# first arg is the remote name, falls back to 'origin'
# origin
#   git@github.com:lukaszkorecki/git-browse.git (fetch)
#   ->
#   lukaszkorecki/git-browse
gitRepoUrl() {
  user_and_repo_name=$(git remote -v | grep -m1 $1 |  awk '{ print $2 }' | sed 's/git.*com.//' | sed 's/\.git//')
  echo "https://github.com/$user_and_repo_name/tree/$(currentBranch)"
}

# FIXME github only
getCommitUrl() {
  $(gitRepoUrl $REMOTE | sed "s/\/$(currentBranch)//" | sed "s/tree/commit/")/$2
}

# commit mode
# TODO use getops
if [[ SHOWCOMMIT == 'y' ]] ; then
  url=$(getCommitUrl $COMMIT)
else
  # detect if we passed line range
  if [[ "$2" != "" ]] ; then
    l1="L$2"
  fi

  if [[ "$3" != "" ]]; then
    l2="-L$3"
  fi

  path=$(getRepoRoot "$1")
  url="$(gitRepoUrl $REMOTE)/$path#$l1$l2"

fi

echo $url
# eval "$open_command '$url'"
